name: Python package

on:
  push:
    branches: [ $default-branch, test_ci ]
  pull_request:
    branches: [ $default-branch, test_ci ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd ardublocklyserver/tests/
        python3 -m coverage run run_all.py
  build:
    if: github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install python3-dev node npm
        python -m pip install --upgrade pip
        python -m pip install tk setuptools
        python --version
        python -c "import struct; print(struct.calcsize('P') * 8)"
        pip --version
        python -m pip install mkdocs
        python -m pip install pyinstaller
        pyinstaller --version
        cd blockly && python build.py
        python3 package/build_docs.py
        python3 package/build_pyinstaller.py linux
        cd package/electron && npm install
        cd package/electron && npm run release
        python3 package/pack_ardublockly.py
